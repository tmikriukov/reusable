env:
  BUNDLE_RUBYGEMS__PKG__GITHUB__COM: strongsd-tech:${{ secrets.READ_GITHUB_PKG_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.READ_GITHUB_PKG_TOKEN }}

on:
  workflow_call:
    inputs:
      ignore_path:
        required: false
        type: string
        default: '.deploy|.github'
      node_version:
        required: false
        type: string
        default: '12.18.4'
      yarn_version:
        required: false
        type: string
        default: '1.22.4'
      ruby_version:
        required: false
        type: string
        default: '2.7.3'        

jobs:
  linters:
    env:
      BUNDLE_RUBYGEMS__PKG__GITHUB__COM: strongsd-tech:${{ secrets.READ_GITHUB_PKG_TOKEN }}
      NODE_AUTH_TOKEN: ${{ secrets.READ_GITHUB_PKG_TOKEN }}
    name: Linters
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: dorny/paths-filter@b2feaf19c27470162a626bd6fa8438ae5b263721 #2.10.2
        id: filter
        with:
          filters: |
            linters_ruby:
              - '!((${{ inputs.ignore_path }})/**)/*.{rb,erb,rake}'
              - '!((${{ inputs.ignore_path }})/**)/{config.ru,Dockerfile,Envfile,Gemfile,Gemfile.lock,Makefile,Rakefile,.rubocop.yml,ruby-version}'
            linters_js:
              - '!((${{ inputs.ignore_path }})/**)/*.{css,html,js,json,jsx,sass,scss,ts,tsx,vue,yaml,yml}'
       
      - name: Set up Node.js
        if: steps.filter.outputs.linters_js == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node_version }}
          always-auth: true
          cache: "yarn"
          registry-url: https://npm.pkg.github.com
      
      - name: Yarn install
        if: steps.filter.outputs.linters_js == 'true'
        run: |
          mkdir -p $(yarn cache dir)/node_modules
          ln -s $(yarn cache dir)/node_modules/ ./node_modules
          yarn policies set-version ${{ inputs.yarn_version }}
          yarn install --frozen-lockfile
      
      - name: Run JS linters
        if: steps.filter.outputs.linters_js == 'true'
        uses: wearerequired/lint-action@v1
        with:
          github_token: ${{ github.token }}
          eslint: true
          prettier: true
      
      - name: Set up Ruby
        if: steps.filter.outputs.linters_ruby == 'true'
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ inputs.ruby_version }}
          bundler-cache: true
      
      - name: Formatting and Security Checks
        if: steps.filter.outputs.linters_ruby == 'true'
        run: |
          bundle exec rubocop
          bundle exec brakeman -z
          bundle exec bundle-audit update
